import subprocess
from typing import Optional

def export_pcap_to_csv(pcap_path: str, output_csv: str, display: bool = True) -> None:
    """
    Uses tshark to extract a rich set of fields from a PCAP file and writes them to a CSV file.
    
    Parameters:
    - pcap_path (str): Full path to the input PCAP file.
    - output_csv (str): Destination path for the extracted CSV output.
    - display (bool): If True, prints progress and errors to the console.
    
    Tshark must be installed and available in the system PATH.
    The fields include Ethernet, IP, TCP/UDP, Wi-Fi, DNS, HTTP, TLS, and GPS metadata.
    """
    # Construct the tshark command with required fields
    tshark_command = [
        "tshark", "-r", pcap_path, "-T", "fields",

        # Frame metadata
        "-e", "frame.time_epoch", "-e", "frame.number", "-e", "frame.len", "-e", "frame.cap_len",
        "-e", "frame.encap_type", "-e", "frame.time_delta_displayed",

        # Ethernet / Wi-Fi addresses and properties
        "-e", "eth.src", "-e", "eth.dst",
        "-e", "wlan_radio.signal_db", "-e", "wlan_radio.channel",
        "-e", "wlan.ssid", "-e", "wlan.bssid", "-e", "wlan.sa", "-e", "wlan.ta", "-e", "wlan.ra", "-e", "wlan.da",

        # IP layer
        "-e", "ip.proto", "-e", "ip.src", "-e", "ip.dst", "-e", "ip.ttl",
        "-e", "ipv6.src", "-e", "ipv6.dst",

        # TCP layer
        "-e", "tcp.srcport", "-e", "tcp.dstport", "-e", "tcp.seq_raw", "-e", "tcp.len", "-e", "tcp.stream",
        "-e", "tcp.hdr_len", "-e", "tcp.flags", "-e", "tcp.window_size",
        "-e", "tcp.options.unknown.payload", "-e", "tcp.analysis",

        # UDP layer
        "-e", "udp.srcport", "-e", "udp.dstport",

        # Application layer
        "-e", "dns.qry.name", "-e", "http.request.method", "-e", "http.host", "-e", "http.user_agent",
        "-e", "tls.handshake.ciphersuite",

        # GPS (if present)
        "-e", "ppi_gps.lat", "-e", "ppi_gps.lon", "-e", "ppi_gps.alt",

        # Display columns (summary protocol info)
        "-e", "_ws.col.Protocol", "-e", "_ws.col.Info",

        # Output formatting
        "-E", "header=y", "-E", "separator=,", "-E", "quote=d"
    ]

    # Run tshark and write its output to CSV
    try:
        with open(output_csv, "w", encoding="utf-8") as f:
            subprocess.run(tshark_command, check=True, stdout=f, text=True)
        if display:
            print(f"Export complete: {output_csv}")
    except subprocess.CalledProcessError as e:
        if display:
            print(f"Tshark error: {e}")
    except Exception as e:
        if display:
            print(f"Unexpected error: {e}")

# If this script is executed directly, run an example extraction
if __name__ == "__main__":
    # These paths should be updated to match your local environment
    pcap = r"path\to\your\input.pcap"
    output = r"path\to\your\output.csv"
    export_pcap_to_csv(pcap, output)