
import xml.etree.ElementTree as ET
import pandas as pd

def export_nmap_xml_to_csv(xml_path: str, output_csv: str, display: bool = True) -> None:
    """
    Extracts key information from an Nmap XML file and writes it to a CSV file.

    Parameters:
    - xml_path (str): Full path to the Nmap XML input file.
    - output_csv (str): Destination path for the extracted CSV output.
    - display (bool): If True, prints progress and errors to the console.
    """
    try:
        tree = ET.parse(xml_path)
        root = tree.getroot()

        extracted_data = []
        for host in root.findall("host"):
            ip_elem = host.find("address")
            ip_address = ip_elem.attrib.get("addr") if ip_elem is not None else None

            ports = host.find("ports")
            if ports is not None:
                for port in ports.findall("port"):
                    protocol = port.attrib.get("protocol")
                    port_id = port.attrib.get("portid")
                    state = port.find("state").attrib.get("state") if port.find("state") is not None else None

                    service = port.find("service")
                    service_name = service.attrib.get("name") if service is not None else None
                    product = service.attrib.get("product") if service is not None else None
                    version = service.attrib.get("version") if service is not None else None
                    cpe = service.find("cpe").text if service is not None and service.find("cpe") is not None else None

                    extracted_data.append({
                        "ip_address": ip_address,
                        "protocol": protocol,
                        "port": port_id,
                        "state": state,
                        "service_name": service_name,
                        "product": product,
                        "version": version,
                        "cpe": cpe
                    })

        df = pd.DataFrame(extracted_data)
        df.to_csv(output_csv, index=False)

        if display:
            print(f"Export complete: {output_csv}")
    except Exception as e:
        if display:
            print(f"Error parsing XML: {e}")

# Example usage when run as a script
if __name__ == "__main__":
    xml_file = r"C:\Users\anthony.b\Desktop\vtk\data\sample-nmap-output.xml"
    output_file = r"C:\Users\anthony.b\Desktop\vtk\data\nmap_extracted_output.csv"
    export_nmap_xml_to_csv(xml_file, output_file)
